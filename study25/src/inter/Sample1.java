package inter;

public class Sample1 {
	public static void main(String [] args) {
		//익명클래스:일시적으로 클래스와 동일 기능을 수행할 수 있는 이름이 없는 클래스를 생성
		//익명클래스는 한번 사용하고 버림
		//통상적으로 인터페이스가 구현된 클래스를 대용하거나, 추상클래스가 상속된 클래스를 대용할 때 사용
		//존재할리 없는 인터페이스의 생성자를 똑같이 적어준 뒤, {} 사이에 추상메서드의 몸통까지 구현

		Test a=new Test();
		a.method(new ITF() {
			
		}
				);
		//구현된 용도에 따라 데이터를 저장 할 수 있다
		//다중 상속은 엄격히 금지 되지만 다중구현 허락
		//상속은 부모는 무조건 하나
		

	}
}
//인터페이스:사용설명서
//interface 이름{}
//인터페이스로는 객체를 생성할 수 없다.
//사용설명서로는 제품을 만들 수 없다.
//필드를 가질 수 없다. 메서드 가질 수 없다. 생성자 없음 (인터페이스는 클래스가 아님!!)
//public static final 상수를 가진다.(상수는 값을 바꿀 수 없다.)
//메서드 가질 수 없다. 추상메서드는 가질 수 있다.(구현한 클래스는 몸통을 구현하여야 한다.)
//생성자 없음
interface ITF{
	int a=10;
	void run();//추상메서드
	//같은 객체이지만 용도를 다르게
	//테니스공이지만 테니스칠때 치는 공
	//테니스공을 의자 밑에 소음 방지용

}//클래스에 해당 용도를 구현해서 사용

interface INTER{

	
}

//인터페이스가 추상메서드를 가진 경우 해당 인터페이스를 구현한 클래스는 반드시 추상메서드의 몸통을
//규현하여야 한다.이 때 public을 붙여야 한다.
class Test{
	void method(ITF i) {
		System.out.println("실행 성공!");
	}
}

